{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","pages/Tab1.tsx","pages/Tab2.tsx","pages/Tab3.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","Storage","Plugins","Tab1","useState","username","setUsername","filehash","setFilehash","ipfs","ipfsClient","mylogin","a","cred","email","role","password","fetch","method","headers","body","JSON","stringify","res","json","console","log","localStorage","setItem","token","err","mytest","getItem","myregister","login","version","x","saveToIpfsWithFilename","files","file","fileDetails","path","name","content","options","wrapWithDirectory","progress","prog","source","add","next","dir","value","cid","toString","xx","user","ipfskey","set","key","error","removeIpfsDirectory","remove","response","listfiles","getuser","storedvalue","parse","ls","liststat","stat","get","collapse","size","color","onSubmit","event","preventDefault","type","onChange","stopPropagation","target","rel","href","position","spellCheck","autocapitalize","onIonChange","detail","required","onClick","placeholder","Tab2","userid","setUserid","nodetype","setNodetype","dirtomake","setDirtomake","filename","setFilename","directory","setDirectory","statvalue","setStatvalue","React","mylist","setMylist","showErrorAlert","setShowErrorAlert","showMessageAlert","setShowMessageAlert","showLoginAlert","setShowLoginAlert","setError","message","setMessage","loginmessage","setLoginmessage","mysegments","setMysegments","trashicon","trash","ipfsconfig","useIonViewDidEnter","useIonViewWillEnter","tmptoken","tuserinfo","userinfo","getconfig","tmpipfs","checkandcreatedir","listNewDirectory","serverurl","prepareDisplayDirectory","tmplocalsegment","split","cleanedlocalsegment","j","length","push","segmentstouse","newarray","i","lastdir","obj","lastpath","fullpath","join","pop","reverse","newdir","preSaveDirectory","listFiles","pinFiles","the_arr","pinoptions","recursive","pin","pinoutput","options1","parents","mkdir","testarray","publicurl","privateurl","localgateway","cumulativeSize","useEffect","newmkdirfunc","deletefile","rm","create","write","file1","hash","saveinserver","index","slot","shape","fill","class","download","icon","isOpen","onDidDismiss","header","subHeader","buttons","Tab3","setEmail","setPassword","loginalert","setLoginalert","nodemessage","setNodemessage","listvalue","setListvalue","logintest","stopnode","startnode","arraylength","expand","App","component","exact","render","to","tab","triangle","square","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+HAAA,IAAIA,EAAM,CACT,kCAAmC,CAClC,IACA,IAED,iCAAkC,CACjC,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,iCAAkC,CACjC,IACA,IAED,gCAAiC,CAChC,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,gCAAiC,CAChC,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,qBAAsB,CACrB,IACA,IAED,uCAAwC,CACvC,IACA,IAED,sCAAuC,CACtC,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,mCAAoC,CACnC,IACA,IAED,kCAAmC,CAClC,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,kCAAmC,CAClC,IACA,IAED,iCAAkC,CACjC,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,iCAAkC,CACjC,IACA,IAED,gCAAiC,CAChC,IACA,IAED,+BAAg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","file":"static/js/main.cee5394a.chunk.js","sourcesContent":["var map = {\n\t\"./ion-action-sheet-ios.entry.js\": [\n\t\t378,\n\t\t37\n\t],\n\t\"./ion-action-sheet-md.entry.js\": [\n\t\t379,\n\t\t38\n\t],\n\t\"./ion-alert-ios.entry.js\": [\n\t\t380,\n\t\t21\n\t],\n\t\"./ion-alert-md.entry.js\": [\n\t\t381,\n\t\t22\n\t],\n\t\"./ion-app_8-ios.entry.js\": [\n\t\t382,\n\t\t10\n\t],\n\t\"./ion-app_8-md.entry.js\": [\n\t\t383,\n\t\t11\n\t],\n\t\"./ion-avatar_3-ios.entry.js\": [\n\t\t384,\n\t\t39\n\t],\n\t\"./ion-avatar_3-md.entry.js\": [\n\t\t385,\n\t\t40\n\t],\n\t\"./ion-back-button-ios.entry.js\": [\n\t\t386,\n\t\t41\n\t],\n\t\"./ion-back-button-md.entry.js\": [\n\t\t387,\n\t\t42\n\t],\n\t\"./ion-backdrop-ios.entry.js\": [\n\t\t388,\n\t\t79\n\t],\n\t\"./ion-backdrop-md.entry.js\": [\n\t\t389,\n\t\t80\n\t],\n\t\"./ion-button_2-ios.entry.js\": [\n\t\t390,\n\t\t43\n\t],\n\t\"./ion-button_2-md.entry.js\": [\n\t\t391,\n\t\t44\n\t],\n\t\"./ion-card_5-ios.entry.js\": [\n\t\t392,\n\t\t45\n\t],\n\t\"./ion-card_5-md.entry.js\": [\n\t\t393,\n\t\t46\n\t],\n\t\"./ion-checkbox-ios.entry.js\": [\n\t\t394,\n\t\t47\n\t],\n\t\"./ion-checkbox-md.entry.js\": [\n\t\t395,\n\t\t48\n\t],\n\t\"./ion-chip-ios.entry.js\": [\n\t\t396,\n\t\t49\n\t],\n\t\"./ion-chip-md.entry.js\": [\n\t\t397,\n\t\t50\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t398,\n\t\t81\n\t],\n\t\"./ion-datetime_3-ios.entry.js\": [\n\t\t399,\n\t\t17\n\t],\n\t\"./ion-datetime_3-md.entry.js\": [\n\t\t400,\n\t\t18\n\t],\n\t\"./ion-fab_3-ios.entry.js\": [\n\t\t401,\n\t\t51\n\t],\n\t\"./ion-fab_3-md.entry.js\": [\n\t\t402,\n\t\t52\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t403,\n\t\t82\n\t],\n\t\"./ion-infinite-scroll_2-ios.entry.js\": [\n\t\t404,\n\t\t35\n\t],\n\t\"./ion-infinite-scroll_2-md.entry.js\": [\n\t\t405,\n\t\t36\n\t],\n\t\"./ion-input-ios.entry.js\": [\n\t\t406,\n\t\t53\n\t],\n\t\"./ion-input-md.entry.js\": [\n\t\t407,\n\t\t54\n\t],\n\t\"./ion-item-option_3-ios.entry.js\": [\n\t\t408,\n\t\t55\n\t],\n\t\"./ion-item-option_3-md.entry.js\": [\n\t\t409,\n\t\t56\n\t],\n\t\"./ion-item_8-ios.entry.js\": [\n\t\t410,\n\t\t57\n\t],\n\t\"./ion-item_8-md.entry.js\": [\n\t\t411,\n\t\t58\n\t],\n\t\"./ion-loading-ios.entry.js\": [\n\t\t412,\n\t\t23\n\t],\n\t\"./ion-loading-md.entry.js\": [\n\t\t413,\n\t\t24\n\t],\n\t\"./ion-menu_3-ios.entry.js\": [\n\t\t414,\n\t\t59\n\t],\n\t\"./ion-menu_3-md.entry.js\": [\n\t\t415,\n\t\t60\n\t],\n\t\"./ion-modal-ios.entry.js\": [\n\t\t416,\n\t\t12\n\t],\n\t\"./ion-modal-md.entry.js\": [\n\t\t417,\n\t\t13\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t418,\n\t\t16\n\t],\n\t\"./ion-popover-ios.entry.js\": [\n\t\t419,\n\t\t14\n\t],\n\t\"./ion-popover-md.entry.js\": [\n\t\t420,\n\t\t15\n\t],\n\t\"./ion-progress-bar-ios.entry.js\": [\n\t\t421,\n\t\t61\n\t],\n\t\"./ion-progress-bar-md.entry.js\": [\n\t\t422,\n\t\t62\n\t],\n\t\"./ion-radio_2-ios.entry.js\": [\n\t\t423,\n\t\t63\n\t],\n\t\"./ion-radio_2-md.entry.js\": [\n\t\t424,\n\t\t64\n\t],\n\t\"./ion-range-ios.entry.js\": [\n\t\t425,\n\t\t65\n\t],\n\t\"./ion-range-md.entry.js\": [\n\t\t426,\n\t\t66\n\t],\n\t\"./ion-refresher_2-ios.entry.js\": [\n\t\t427,\n\t\t25\n\t],\n\t\"./ion-refresher_2-md.entry.js\": [\n\t\t428,\n\t\t26\n\t],\n\t\"./ion-reorder_2-ios.entry.js\": [\n\t\t429,\n\t\t33\n\t],\n\t\"./ion-reorder_2-md.entry.js\": [\n\t\t430,\n\t\t34\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t431,\n\t\t83\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t432,\n\t\t67\n\t],\n\t\"./ion-searchbar-ios.entry.js\": [\n\t\t433,\n\t\t27\n\t],\n\t\"./ion-searchbar-md.entry.js\": [\n\t\t434,\n\t\t28\n\t],\n\t\"./ion-segment_2-ios.entry.js\": [\n\t\t435,\n\t\t68\n\t],\n\t\"./ion-segment_2-md.entry.js\": [\n\t\t436,\n\t\t69\n\t],\n\t\"./ion-select_3-ios.entry.js\": [\n\t\t437,\n\t\t70\n\t],\n\t\"./ion-select_3-md.entry.js\": [\n\t\t438,\n\t\t71\n\t],\n\t\"./ion-slide_2-ios.entry.js\": [\n\t\t439,\n\t\t84\n\t],\n\t\"./ion-slide_2-md.entry.js\": [\n\t\t440,\n\t\t85\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t441,\n\t\t31\n\t],\n\t\"./ion-split-pane-ios.entry.js\": [\n\t\t442,\n\t\t86\n\t],\n\t\"./ion-split-pane-md.entry.js\": [\n\t\t443,\n\t\t87\n\t],\n\t\"./ion-tab-bar_2-ios.entry.js\": [\n\t\t444,\n\t\t72\n\t],\n\t\"./ion-tab-bar_2-md.entry.js\": [\n\t\t445,\n\t\t73\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t446,\n\t\t32\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t447,\n\t\t74\n\t],\n\t\"./ion-textarea-ios.entry.js\": [\n\t\t448,\n\t\t75\n\t],\n\t\"./ion-textarea-md.entry.js\": [\n\t\t449,\n\t\t76\n\t],\n\t\"./ion-toast-ios.entry.js\": [\n\t\t450,\n\t\t29\n\t],\n\t\"./ion-toast-md.entry.js\": [\n\t\t451,\n\t\t30\n\t],\n\t\"./ion-toggle-ios.entry.js\": [\n\t\t452,\n\t\t19\n\t],\n\t\"./ion-toggle-md.entry.js\": [\n\t\t453,\n\t\t20\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t454,\n\t\t88\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 141;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t458,\n\t\t96\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 143;\nmodule.exports = webpackAsyncContext;","import { Plugins } from '@capacitor/core';\nimport React, { useState }  from 'react';\nimport { IonButton, IonList,IonInput, IonLabel,IonItem,  IonContent, IonHeader, IonPage, IonTitle, IonToolbar } from '@ionic/react';\nimport ipfsClient from 'ipfs-http-client';\n//import OrbitDB from 'orbit-db';\n//import ExploreContainer from '../components/ExploreContainer';\n\n\nimport './Tab1.css';\n\nconst { Storage } = Plugins;\nconst Tab1: React.FC = () =>  {\n  const [username, setUsername] = useState('');\n  const [filehash, setFilehash] = useState('');\n//\n//  const [keepfile, setKeepfile] = useState('');\n//  const [password, setPassword] = useState('');\n  const listnamevalue = '';\n  const liststatvalue = '';\n\n  const ipfs = ipfsClient('/ip4/157.245.63.46/tcp/5001')\n\n\n // const [orbitdb, setOrbit] = useState();\n\n\n  const mylogin = async () => {\n  var url = \"http://157.245.63.46:8080/api/auth/login\";\n  var cred = {\n\temail: 'a@b.com',\n\trole: 'creator',\n        password: 'welcome123'\t\n   };\n  fetch(url, {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",              \n            },\n            body: JSON.stringify(cred)\n     })\n      .then(res => res.json())\n      .then(\n        (res) => {\n         console.log(res);\n         localStorage.setItem('token', res.token);\n/*\n          this.setState({          \n            tags: res.tags\n          });\n*/\n        },      \n        (err) => {\n          console.log(err)\n        }\n      )\n  } \n\n  const mytest = async () => {\n  var url = \"http://157.245.63.46:8080/api/auth/protected\";\n\n  fetch(url,\n   {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"\" + localStorage.getItem(\"token\"),\n      }\n    })\n      .then(res => res.json())\n      .then(\n        (res) => {\n         console.log(res);\n/*\n          this.setState({          \n            tags: res.tags\n          });\n*/\n        },      \n        (err) => {\n          console.log(err)\n        }\n      )\n  } \n  const myregister = async () => {\n  var url = \"http://157.245.63.46:8080/api/auth/register\";\n   var cred = {\n        email: 'a@b.com',\n\trole: 'creator',\n        password: 'welcome123'\n   };\n  fetch(url, {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(cred)\n     })\n      .then(res => res.json())\n      .then(\n        (res) => {\n         console.log(res);\n         localStorage.setItem('token', res.token);\n/*\n          this.setState({          \n            tags: res.tags\n          });\n*/\n        },      \n        (err) => {\n          console.log(err)\n        }\n      )\n  } \n  const login = async () => {\n//  var  orbitdb1 = new OrbitDB(ipfs);\n//    setOrbit(orbitdb1)\n\n    try {\n    var x = await ipfs.version();\n    // var y = await orbitdb.keyvalue('my-database');\n    console.log(x);\n    // console.log(y);\n    } catch (err) {\n     console.log(err);\n    }\n  };\n/*\n  const saveToIpfs = async (files) => {\n    const source = ipfs.add(\n      [...files],\n      {\n        progress: (prog) => console.log(`received: ${prog}`)\n      }\n    )\n    try {\n      for await (const file of source) {\n        console.log(file)\n        setFilehash(file.path )\n      }\n    } catch (err) {\n      console.error(err)\n    }\n  };\n*/\n\n const handleSubmit = (event) => {\n    event.preventDefault()\n  };\n\n  const captureFile = (event) => {\n    event.stopPropagation()\n    event.preventDefault()\n\n      saveToIpfsWithFilename(event.target.files)\n/*\n    if (keepfile) {\n      saveToIpfsWithFilename(event.target.files)\n    } else {\n\n      saveToIpfs(event.target.files)\n    }\n*/\n\n  };\n\n  const saveToIpfsWithFilename = async (files) => {\n    const file = [...files][0]\n\n    if(!file) return;\n\n    const fileDetails = {\n      path: '/user1/'+ file.name,\n      content: file\n    }\n    const options = {\n      wrapWithDirectory: true,\n      progress: (prog) => console.log(`received: ${prog}`)\n    }\n\n    const source = ipfs.add(fileDetails, options)\n    try {\n        console.log(source)\n        var dir = await source.next(); \n        dir = await source.next(); \n        if(dir) {\n        console.log(dir)\n        console.log(JSON.stringify(dir));\n        setFilehash(dir.value.cid.toString())\n        var xx = {user:'user1', ipfskey: dir.value.cid.toString()}; \n        await Storage.set({ key: 'userobj', value: JSON.stringify(xx) });\n        }\n    } catch (err) {\n      console.error(err)\n    }\n  };\n\n  \n  const removeIpfsDirectory = async () => {\n    const response = await Storage.remove({key: 'userobj' });\n    console.log(JSON.stringify(response));\n  };\n/*\n  const createIpfsDirectory = async (obj) => {\n    console.log(\"obj=\" + JSON.stringify(obj));\n \n    const fileDetails = {\n      path: '/'+obj.user + '/'\n    }\n    const options = {\n      wrapWithDirectory: true,\n      progress: (prog) => console.log(`received: ${prog}`)\n    }\n\n    const source = ipfs.add(fileDetails, options)\n    try {\n      for await (const file of source) {\n        console.log(file)\n        obj.ipfskey = file.cid.toString();\n        return (obj );\n      }\n    } catch (err) {\n      console.error(err)\n    }\n  };\n\n */ \n\n  const listfiles = async () => {\n    //var options = {};\n\n    var  storedvalue ;\n    try {\n      storedvalue = await getuser();\n      console.log('storedvalue'+ storedvalue);\n    } catch(err) {\n\n      console.log('err'+ err);\n    }\n\n   console.log(JSON.parse(storedvalue).ipfskey);\n\n   var source = ipfs.ls(JSON.parse(storedvalue).ipfskey);\n    try {\n      for await (const file of source) {\n        console.log(file)\n        console.log(file.path)\n      }\n    } catch (err) {\n      console.error(err)\n    }\n\n  };\n\n\n  const liststat = async () => {\n    var options = {};\n      var storedvalue ;\n    try {\n      storedvalue = await getuser();\n      console.log('storedvalue'+ storedvalue);\n    } catch(err) {\n\n      console.log('err'+ err);\n    }\n\n\n    var source = await ipfs.files.stat('/ipfs/'+JSON.parse(storedvalue).ipfskey, options)\n        console.log(source)\n\n  };\n\n  const getuser = async () => {\n \n    var response = await Storage.get({key: 'userobj' });\n    return response.value;\n\n/*\n    if(response.value != null ) {\n      console.log('response='+ response);\n      return response.value;\n    } else {\n      return null;\n    }\n      var obj = await createIpfsDirectory({user:'user1', ipfskey:''});\n      console.log('obj='+ JSON.stringify(obj));\n      await Storage.set({ key: 'userobj', value: JSON.stringify(obj) });\n      return obj;\n    }\n  */\n  };\n\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>Tab 1</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonHeader collapse=\"condense\">\n          <IonToolbar>\n            <IonTitle size=\"large\">Tab 1</IonTitle>\n          </IonToolbar>\n        </IonHeader>\n            <IonItem>\n              <IonLabel color=\"primary\">IPFS create/list files</IonLabel>\n            </IonItem>\n    <div>\n        <form id='captureMedia' onSubmit={handleSubmit}>\n          <input type='file' onChange={captureFile} /><br/>\n        </form>\n        </div>\n  <div>\n          <a target='_blank' rel=\"noopener noreferrer\"\n            href={'https://ipfs.io/ipfs/' + filehash}>\n            {filehash}\n          </a>\n        </div>\n\n    <IonList>\n            <IonItem >\n              <IonLabel position=\"stacked\" color=\"primary\">Username</IonLabel>\n              <IonInput name=\"username\" type=\"text\" value={username} spellCheck={false} autocapitalize=\"off\" onIonChange={e => setUsername(e.detail.value!)}\n                required>\n              </IonInput>\n            </IonItem>\n            <IonButton onClick={login}> Test button </IonButton>\n            <IonButton onClick={removeIpfsDirectory}> Remove button </IonButton>\n            <IonItem >\n              <IonInput name=\"listname\" type=\"text\" placeholder=\"List\" value={listnamevalue} spellCheck={false} autocapitalize=\"off\" >\n            <IonButton onClick={listfiles}> List </IonButton>\n              </IonInput>\n            </IonItem>\n            <IonItem >\n              <IonInput name=\"liststat\" type=\"text\" placeholder=\"Stat\" value={liststatvalue} spellCheck={false} autocapitalize=\"off\" >\n            <IonButton onClick={liststat}> Stat </IonButton>\n              </IonInput>\n            </IonItem>\n            <IonItem>\n            <IonButton onClick={mylogin}> mylogin </IonButton>\n            <IonButton onClick={myregister}> register </IonButton>\n            <IonButton onClick={mytest}> test </IonButton>\n            </IonItem>\n    </IonList>\n\n    <p> Hello </p>\n   \n\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Tab1;\n","import { Plugins } from '@capacitor/core';\n\n\nimport React, {  useEffect, useState }  from 'react';\nimport { IonBadge, IonCardHeader, IonCard, useIonViewWillEnter, useIonViewDidEnter, IonRow, IonCol, IonGrid, IonIcon, IonText, IonAlert, IonButton, IonList,IonInput, IonLabel,IonItem,  IonContent, IonHeader, IonPage, IonTitle, IonToolbar } from '@ionic/react';\n\nimport { trash } from 'ionicons/icons';\nimport ipfsClient from 'ipfs-http-client';\n\n\nimport './Tab2.css';\n\nconst { Storage } = Plugins;\n\nconst Tab2: React.FC = () =>  {\n  const [userid, setUserid] = useState('');\n  const [nodetype, setNodetype] = useState('');\n  const [dirtomake, setDirtomake] = useState('');\n  const [filehash, setFilehash] = useState('');\n  const [filename, setFilename] = useState('');\n  const [directory, setDirectory] = useState('/user1/contents/');\n  const [statvalue, setStatvalue] = useState(0);\n  const [mylist, setMylist] = React.useState([]);\n  const [showErrorAlert, setShowErrorAlert] = useState(false);\n  const [showMessageAlert, setShowMessageAlert] = useState(false);\n  const [showLoginAlert, setShowLoginAlert] = useState(false);\n  const [error, setError] = useState('');\n  const [message, setMessage] = useState('');\n  const [loginmessage, setLoginmessage] = useState('');\n\n  const [mysegments, setMysegments] = React.useState([]);\n\n\n  //const mylist1: any[] = [];\n\n const trashicon = trash;\n\n  const serverurl = \"http://157.245.63.46:8080\";\n//  const serverurl = \"http://157.245.63.46:1337\";\n\n\n  const ipfs = ipfsClient('/ip4/157.245.63.46/tcp/5001')\n\n\n  var ipfsconfig : any = {\n\tnodetype : '',\n\tuserid : ''\n  };\n \n useIonViewDidEnter(() => {\n    console.log('ionViewDidEnter event fired')\n  });\n\n  useIonViewWillEnter(() => {\n    console.log('ionViewWillEnter event fired');\n\n    var tmptoken = localStorage.getItem(\"token\");\n    var tuserinfo = localStorage.getItem('userinfo') as any;\n    var userinfo = null as any;\n\n    if(tmptoken == null) \n    {\n      setLoginmessage(\"Login to proceed\");\n      setShowLoginAlert(true); \n      return;\n    }\n\n    console.log(\"userinfo=\"+ tuserinfo);\n    try {\n      userinfo = JSON.parse(tuserinfo);\n    } catch(err)   {\n     return;\n    };\n\n    if(userinfo != null )\n    {\n        console.log(tuserinfo);\n//        setUsername(userinfo.username);\n        setUserid(userinfo.userid);\n//        setEmail(userinfo.email);\n    }\n\n    getconfig();\n\n\n    var tmpipfs = localStorage.getItem(\"ipfsconfig\");\n\n\n\n    if(tmpipfs != null) {\n    ipfsconfig = JSON.parse(tmpipfs);\n    console.log(ipfsconfig);\n\n    }else {\n      setLoginmessage(\"Config not created\");\n      setShowLoginAlert(true); \n      return;\n\n    }\n\n    setUserid(ipfsconfig.userid);\n    setNodetype(ipfsconfig.nodetype);\n    checkandcreatedir('/'+ ipfsconfig.userid);\n\n    listNewDirectory('/'+ ipfsconfig.userid);\n  });\n\n  const getconfig = async () => {\n  var url = serverurl + \"/api/ipfsnode/getipfsconfig\";\n   var cred = {\n        userid: userid,\n        nodetype: nodetype\n   };\n  fetch(url, {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"\" + localStorage.getItem(\"token\"),\n            },\n            body: JSON.stringify(cred)\n     })\n      .then(res => res.json())\n      .then(\n        (res) => {\n         console.log(res);\n         localStorage.setItem(\"ipfsconfig\", JSON.stringify(res) );\n        },\n        (err) => {\n         setError(err);\n         setShowErrorAlert(true);\n          console.log(err)\n        }\n      )\n  }\n\n\n\n const handleSubmit = (event) => {\n    event.preventDefault()\n  };\n\n  const captureFile = (event) => {\n    event.stopPropagation()\n    event.preventDefault()\n\n    saveToIpfsWithFilename(event.target.files)\n\n  };\n\n  const prepareDisplayDirectory = async (dir) => {\n\n    var tmplocalsegment= dir.split('/');\n    var cleanedlocalsegment = [] as any;\n   \n    for(var j =0; j< tmplocalsegment.length; j++) {\n       if(tmplocalsegment[j] !== '')\n       cleanedlocalsegment.push(tmplocalsegment[j]);\n    }\n \n    var segmentstouse = [] as any;\n    console.log(JSON.stringify(cleanedlocalsegment));\n\n    var newarray = cleanedlocalsegment.map((x)=> x);\n    for(var i = 0; i< newarray.length; i++) {\n \n       var lastdir =  newarray[newarray.length-i-1];\n       var obj = {\n         lastpath: lastdir,\n         fullpath: '/'+cleanedlocalsegment.join('/') \n       };\n\n      segmentstouse.push(obj); \n      cleanedlocalsegment.pop();\n    }\n    \n    console.log(JSON.stringify(segmentstouse));\n    segmentstouse.reverse(); \n    setMysegments(segmentstouse);\n    console.log(JSON.stringify(segmentstouse));\n \n  };\n\n  const listNewDirectory = async (newdir) => {\n    preSaveDirectory(newdir); \n    prepareDisplayDirectory(newdir);\n    listFiles(newdir);\n  };\n\n  const preSaveDirectory = async (dir) => {\n\n    var tmplocalsegment= dir.split('/');\n    var cleanedlocalsegment = [] as any;\n\n    for(var j =0; j< tmplocalsegment.length; j++) {\n       if(tmplocalsegment[j] !== '')\n       cleanedlocalsegment.push(tmplocalsegment[j]);\n    }\n   \n    var newdir = '/'+cleanedlocalsegment.join('/'); \n    setDirectory(newdir); \n  };\n\n  const pinFiles = async (dir) => {\n    var options = {};\n/*\n    var tmpss = localStorage.getItem(\"ipfsconfig\");\n    if(tmpss != null) {\n    ipfsconfig = JSON.parse(tmpss);\n    console.log(ipfsconfig);\n    }\n*/\n   var the_arr = dir.split('/');\n    var lastdir = the_arr.pop();\n    if(lastdir === '')\n    lastdir = the_arr.pop();\n   var newdir =  the_arr.join('/') ;\n\n   console.log(\"newdir =\" + newdir);\n   console.log(\"lastdir =\" + lastdir);\n\n   if(newdir === '') {\n     newdir = '/';\n   }\n\n   var source = ipfs.files.ls(newdir , options)\n    try {\n      for await (const file of source) {\n        console.log(file)\n\n        if(file.type === 1 && file.name === lastdir) {\n\n          var pinoptions = {\n\t\trecursive: true\n          };\n          var pinoutput = await ipfs.pin.add(file.cid.toString(), pinoptions);\n          console.log(\"pinning status =\" + JSON.stringify(pinoutput));\n        }\n      }\n      setMessage('Pinned '+ dir);\n      setShowMessageAlert(true); \n    } catch (err) {\n      setError(err);\n      setShowErrorAlert(true);\n\n      console.error(err)\n    }\n\n  };\n\n  const checkandcreatedir = async (dir) => {\n\n    var options = {};\n    var source = ipfs.files.ls(dir, options)\n    try {\n      for await (const file of source) {\n        console.log(file)\n        //mylist1.push( {key:('hh'+ p++), value:file}); \n       }\n     } catch (err) {\n      setError(err);\n      console.error(err)\n\n      var options1 = {parents: true};\n        source = await ipfs.files.mkdir(dir , options1)\n      console.log(source);\n    }\n\n\n\n  };\n\n  const listFiles = async (dir) => {\n    var options = {};\n\n/*\n    var tmpss = localStorage.getItem(\"ipfsconfig\");\n    if(tmpss != null) {\n    ipfsconfig = JSON.parse(tmpss);\n    console.log(ipfsconfig);\n    }\n\n*/\n\n var source = ipfs.files.ls(dir, options)\n    var testarray = [] as any;\n    try {\n      for await (const file of source) {\n        console.log(file)\n        //mylist1.push( {key:('hh'+ p++), value:file}); \n\n        var publicurl = 'https://ipfs.io/ipfs/'+file.cid.toString()\n        var privateurl = ipfsconfig.localgateway + '/ipfs/'+file.cid.toString()\n\n        var obj = {\n         name: file.name,\n         type: file.type,\n         cid: file.cid.toString(),\n         fullpath: dir+\"/\"+ file.name, \n         publicurl: publicurl,\n         privateurl: privateurl,\n        };\n        testarray.push(obj); \n      }\n            setMylist(testarray);\n    } catch (err) {\n      setError(err);\n      setShowErrorAlert(true);\n\n      console.error(err)\n    }\n\n  };\n\n\n  const liststat = async (dir) => {\n    var options = {};\n    var source = await ipfs.files.stat(dir , options)\n     setStatvalue(source.cumulativeSize);\n\n        console.log(source)\n\n  };\n \n\n\n  useEffect(() => {\n\n\n/*\n    if(mylist1.length > 0) {\n      for( var x in mylist1) {\n       console.log(x);\n      }\n    };\n*/\n\n  }, [directory]);\n\n/*\n  const mkdirfunc = async () => {\n    var options = {parents: true};\n    var source = await ipfs.files.mkdir('/user1/contents', options)\n        console.log(source)\n  };\n\n*/\n  const newmkdirfunc = async () => {\n    var options = {parents: true};\n    if(dirtomake.length < 1) return; \n    var source = await ipfs.files.mkdir(directory+\"/\"+dirtomake, options)\n        console.log(source)\n    listFiles(directory);\n  };\n\n  const deletefile = async (cid) => {\n    var options = {};\n    var source = await ipfs.files.rm(cid, options)\n        console.log(source)\n    listFiles(directory);\n  };\n\n\n\nconst saveToIpfsWithFilename = async (files) => {\n    const file = [...files][0]\n    const options = {\n    create: true\n    }\n\n      await Storage.set({ key: 'user', value: 'user1' });\n    var source = await ipfs.files.write(directory +'/'+file.name, file, options)\n        console.log(source)\n        source = ipfs.files.ls(directory +'/'+file.name, options);\n         var file1 = await source.next();\n\t  console.log( file1.value.cid.toString() )\n        \n        setFilename(directory +'/'+ file.name);\n        setFilehash(file1.value.cid.toString());\n        var x = {\n\t  hash: file1.value.cid.toString(),\n\t  name: file.name,\n\t  cid: file1.value.cid.toString(),\n\t  path: directory\n        };\n        saveinserver(x);\n        listFiles(directory);\n  };\n\n  const saveinserver = async ( x ) => {\n\n   var url = serverurl + \"/api/ipfsusage/savefile\";\n\n   var cred = {\n        userid: 'user1',\n        name: x.name,\n        path: x.path,\n        hash: x.hash, \n        cid: x.cid, \n   };\n\n  fetch(url, {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"\" + localStorage.getItem(\"token\"),\n            },\n            body: JSON.stringify(cred)\n     })\n      .then(res => res.json())\n      .then(\n        (res) => {\n         console.log(res);\n        },\n        (err) => {\n      setError(err);\n      setShowErrorAlert(true);\n          console.log(err)\n        }\n      )\n  }\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle> File manager </IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonHeader collapse=\"condense\">\n          <IonToolbar>\n            <IonTitle size=\"large\">File manager </IonTitle>\n          </IonToolbar>\n        </IonHeader>\n\n    <IonList>\n            <IonCard >\n     <IonCardHeader>\n    IPFS storage system \n     </IonCardHeader>\n            <IonItem >\n      <IonGrid>\n  <IonRow>\n    <IonCol>\n              <IonLabel color=\"primary\">Nodetype  </IonLabel>\n    </IonCol>\n    <IonCol>\n              <IonLabel color=\"primary\"> {nodetype} </IonLabel>\n    </IonCol>\n  </IonRow>\n  <IonRow>\n    <IonCol>\n              <IonLabel color=\"primary\">Userid  </IonLabel>\n    </IonCol>\n    <IonCol>\n              <IonLabel color=\"primary\"> {userid} </IonLabel>\n    </IonCol>\n  </IonRow>\n      </IonGrid>\n            </IonItem >\n\n            <IonItem >\n      <IonGrid>\n  <IonRow>\n    <IonCol>\n    Current directory\n    </IonCol>\n    <IonCol>\n\n\n\n\n\n           {\n           mysegments.map((a, index) =>      {\n         return (\n            <IonText key={'somggsgserandohmxxx'+index}   onClick={()=>listNewDirectory(a['fullpath'])} >/{a['lastpath']}</IonText>\n           )\n           })\n          }\n    </IonCol>\n  </IonRow>\n      </IonGrid>\n            </IonItem>\n            </IonCard >\n\n   <IonCard >\n     <IonCardHeader>\n    File processing\n     </IonCardHeader>\n\n            <IonItem >\n <IonBadge slot=\"start\">1</IonBadge>\n      <IonGrid>\n  <IonRow>\n    <IonCol>\n              <IonInput name=\"listname\" type=\"text\" placeholder=\"Create directory \" value={dirtomake} spellCheck={false} autocapitalize=\"off\" onIonChange={e => setDirtomake(e.detail.value!)} >\n              </IonInput>\n    </IonCol>\n    <IonCol>\n            <IonButton shape=\"round\" fill=\"outline\" onClick={newmkdirfunc} > mkdir </IonButton>\n    </IonCol>\n  </IonRow>\n      </IonGrid>\n            </IonItem>\n            \n    <IonItem >\n <IonBadge slot=\"start\">2</IonBadge>\n      <IonGrid>\n  <IonRow>\n    <IonCol>\n          <IonLabel color=\"primary\"   >  Choose file to upload </IonLabel>\n    </IonCol>\n    <IonCol>\n    <div>\n        <form id='captureMedia' onSubmit={handleSubmit}>\n          <input type='file' onChange={captureFile} /><br/>\n        </form>\n        </div>\n  <div>\n          <a target='_blank' rel=\"noopener noreferrer\"\n            href={'https://ipfs.io/ipfs/' + filehash}>\n            {filename}\n          </a>\n        </div>\n    </IonCol>\n  </IonRow>\n      </IonGrid>\n            </IonItem >\n   </IonCard >\n\n   <IonCard >\n     <IonCardHeader>\n    File queries\n     </IonCardHeader>\n\n\n            <IonItem >\n      <IonGrid>\n  <IonRow>\n    <IonCol>\n            <IonButton shape=\"round\" fill=\"outline\" onClick={()=>listFiles(directory)} size=\"small\" > List files </IonButton>\n    </IonCol>\n    <IonCol>\n            <IonButton shape=\"round\" fill=\"outline\" onClick={()=>pinFiles(directory)} size=\"small\" > Pin directory </IonButton>\n    </IonCol>\n  </IonRow>\n      </IonGrid>\n            </IonItem >\n            <IonItem >\n      <IonGrid>\n  <IonRow>\n    <IonCol>\n            <IonButton shape=\"round\" fill=\"outline\" onClick={()=>liststat(directory)} size=\"small\" > Usage </IonButton>\n    </IonCol>\n    <IonCol>\n          <IonLabel color=\"primary\"   > {statvalue}  bytes   </IonLabel>\n    </IonCol>\n  </IonRow>\n      </IonGrid>\n            </IonItem >\n   </IonCard >\n   <IonCard >\n     <IonCardHeader>\n    File listing\n     </IonCardHeader>\n\n       {\n           mylist.map((a, index) =>      {\n         return (\n            <IonItem key={'somerandomghxx'+index}>\n      { a['type'] ? (\n           <IonLabel class=\"ion-text-wrap\">\n      <IonGrid>\n  <IonRow>\n    <IonCol>\n      <IonText color=\"danger\">\n        <h3> /{a['name']} </h3>\n      </IonText>\n    </IonCol>\n    <IonCol>\n    </IonCol>\n    <IonCol>\n     <IonButton size=\"small\" shape=\"round\" fill=\"outline\"  onClick={()=>listNewDirectory(a['fullpath'])} >\n       Directory\n    </IonButton>\n    </IonCol>\n    <IonCol>\n    </IonCol>\n  </IonRow>\n      </IonGrid>\n\n    </IonLabel>\n\n      ) : (\n           <IonLabel class=\"ion-text-wrap\">\n      <IonGrid>\n  <IonRow>\n    <IonCol>\n        <h3> {a['name']} </h3>\n    </IonCol>\n  </IonRow>\n  <IonRow>\n    <IonCol>\n           <a target=\"_blank\" rel=\"noopener noreferrer\" href={a['publicurl']} >Public </a>\n    </IonCol>\n    <IonCol>\n           <a target=\"_blank\" rel=\"noopener noreferrer\" href={a['privateurl']} >Private </a>\n    </IonCol>\n    <IonCol>\n           <a  target=\"_blank\"  rel=\"noopener noreferrer\" href={a['privateurl']} download> Download </a>\n    </IonCol>\n    <IonCol>\n     <IonButton shape=\"round\" fill=\"outline\" onClick={()=>deletefile(a['fullpath'])} >\n      <IonIcon size=\"small\" slot=\"icon-only\" icon={trashicon} />\n    </IonButton>\n    </IonCol>\n  </IonRow>\n\n      </IonGrid>\n\n\n    </IonLabel>\n      ) }\n\n\n\n            </IonItem>\n          ) \n          })\n       }  \n\n   </IonCard >\n\n\n\n    </IonList>\n\n    <IonAlert\n          isOpen={showErrorAlert}\n          onDidDismiss={() => setShowErrorAlert(false)}\n          header={'Alert'}\n          subHeader={'Error'}\n          message={error}\n          buttons={['OK']}\n        />\n\n  <IonAlert\n          isOpen={showLoginAlert}\n          onDidDismiss={() => setShowLoginAlert(false)}\n          header={'Instruction'}\n          subHeader={'Login '}\n          message={loginmessage}\n          buttons={['OK']}\n        />\n\n    <IonAlert\n          isOpen={showMessageAlert}\n          onDidDismiss={() => setShowMessageAlert(false)}\n          header={'Message'}\n          message={message}\n          buttons={['OK']}\n        />\n\n\n   \n\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Tab2;\n","\n//import { Plugins } from '@capacitor/core';\nimport React, { useState }  from 'react';\nimport {  useIonViewWillEnter, IonListHeader, IonRadioGroup,IonRadio, IonRow, IonCol, IonAlert, IonButton, IonList,IonInput, IonLabel,IonItem,  IonContent, IonHeader, IonPage, IonTitle, IonToolbar } from '@ionic/react';\nimport ipfsClient from 'ipfs-http-client';\n\n\nimport './Tab3.css';\n\n//const { Storage } = Plugins;\nconst Tab3: React.FC = () =>  {\n  const [email, setEmail] = useState('');\n  const [username, setUsername] = useState('');\n  const [userid, setUserid] = useState('');\n  const [nodetype, setNodetype] = useState('privatesharednode');\n  const [password, setPassword] = useState('');\n  const [loginmessage, setLoginmessage] = useState('Place for login message');\n  const [loginalert, setLoginalert] = useState('');\n  const [nodemessage, setNodemessage] = useState('Place for node message');\n  const [statvalue, setStatvalue] = useState(0);\n  const [listvalue, setListvalue] = useState(0);\n  const [showLoginAlert, setShowLoginAlert] = useState(false);\n\n\n\n  //const [filehash, setFilehash] = useState('');\n  const [showErrorAlert, setShowErrorAlert] = useState(false);\n  const [error, setError] = useState('');\n\n   const serverurl = \"http://157.245.63.46:8080\";\n//   const serverurl = \"http://157.245.63.46:1337\";\n\n  const ipfs = ipfsClient('/ip4/157.245.63.46/tcp/5001')\n\n\n // const [orbitdb, setOrbit] = useState();\n\n  useIonViewWillEnter(() => {\n    console.log('ionViewWillEnter event fired');\n    var tmptoken = localStorage.getItem(\"token\");\n    var tuserinfo = localStorage.getItem('userinfo') as any;\n    var userinfo = null as any;\n\n    console.log(\"userinfo=\"+ tuserinfo);\n    try {\n      userinfo = JSON.parse(tuserinfo); \n    } catch(err)   {\n     return;\n    };\n\n    if(userinfo != null )\n    {\n        console.log(tuserinfo);\n\tsetUsername(userinfo.username);\n\tsetUserid(userinfo.userid);\n\tsetEmail(userinfo.email);\n    }\n\n\n    if(tmptoken == null)\n    {\n      setLoginalert(\"Login to proceed\");\n      setShowLoginAlert(true);\n      return;\n    }\n\n    logintest();\n\n    getconfig();\n\n    var tmpipfs = localStorage.getItem(\"ipfsconfig\");\n\n    if(tmpipfs == null)\n     {\n      setLoginalert(\"Config not created\");\n      setShowLoginAlert(true);\n      return;\n     }\n\n   });\n\n\n  const mylogin = async () => {\n  var url = serverurl + \"/api/auth/login\";\n  var cred = {\n\temail: email,\n\tusername: username,\n\trole: 'user',\n        password: password\n   };\n  fetch(url, {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",              \n            },\n            body: JSON.stringify(cred)\n     })\n      .then(res => res.json())\n      .then(\n        (res) => {\n         console.log(res);\n         localStorage.setItem('token', res.token);\n         localStorage.setItem('userinfo', JSON.stringify(res.user));\n         setLoginmessage(JSON.stringify(res));\n        },      \n        (err) => {\n         setError(err);\n         setShowErrorAlert(true);\n          console.log(err)\n        }\n      )\n  } \n\n  const logintest = async () => {\n  var url = serverurl + \"/api/auth/protected\";\n\n  fetch(url,\n   {\n      method: 'GET',\n      headers: {\n//        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"\" + localStorage.getItem(\"token\"),\n      }\n    })\n      .then(res => res.json())\n      .then(\n        (res) => {\n         console.log(res);\n         setLoginmessage(JSON.stringify(res));\n         return 0;\n        },      \n        (err) => {\n         setError(err);\n         setShowErrorAlert(true);\n          console.log(err)\n         return -1;\n        }\n      )\n  } \n  const myregister = async () => {\n  var url = serverurl + \"/api/auth/register\";\n   var cred = {\n        email: email,\n\tusername: username,\n\trole: 'user',\n        password: password\n   };\n  fetch(url, {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(cred)\n     })\n      .then(res => res.json())\n      .then(\n        (res) => {\n         console.log(res);\n         localStorage.setItem('token', res.token);\n         setLoginmessage(JSON.stringify(res));\n        },      \n        (err) => {\n         setError(err);\n         setShowErrorAlert(true);\n          console.log(err)\n        }\n      )\n  } \n\n  const stopnode = async () => {\n  var url = serverurl + \"/api/ipfsnode/stopnode\";\n   var cred = {\n\tuserid: userid,\n   };\n  fetch(url, {\n            method: 'POST',\n            headers: {\n                \"Authorization\": \"\" + localStorage.getItem(\"token\"),\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(cred)\n     })\n      .then(res => res.json())\n      .then(\n        (res) => {\n         console.log(res);\n         setNodemessage(JSON.stringify(res));\n           \n        },      \n        (err) => {\n         setError(err);\n         setShowErrorAlert(true);\n          console.log(err)\n        }\n      )\n  } \n\n  const startnode = async () => {\n  var url = serverurl + \"/api/ipfsnode/startnode\";\n   var cred = {\n\tuserid: userid\n   };\n  fetch(url, {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"\" + localStorage.getItem(\"token\"),\n            },\n            body: JSON.stringify(cred)\n     })\n      .then(res => res.json())\n      .then(\n        (res) => {\n         console.log(res);\n         setNodemessage(JSON.stringify(res));\n        },      \n        (err) => {\n         setError(err);\n         setShowErrorAlert(true);\n          console.log(err)\n        }\n      )\n  } \n\n/*\n  const saveinserver = async ( x ) => {\n\n   var url = serverurl + \"/api/ipfsusage/savefile\";\n\n   var cred = {\n        userid: 'user1',\n        name: x.name,\n        path: x.path,\n        hash: x.hash, \n        cid: x.cid, \n   };\n\n  fetch(url, {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"\" + localStorage.getItem(\"token\"),\n            },\n            body: JSON.stringify(cred)\n     })\n      .then(res => res.json())\n      .then(\n        (res) => {\n         console.log(res);\n        },\n        (err) => {\n         setError(err);\n         setShowErrorAlert(true);\n          console.log(err)\n        }\n      )\n  }\n\n*/\n  const getconfig = async () => {\n  var url = serverurl + \"/api/ipfsnode/getipfsconfig\";\n   var cred = {\n\tuserid: userid,\n\tnodetype: nodetype\n   };\n  fetch(url, {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"\" + localStorage.getItem(\"token\"),\n            },\n            body: JSON.stringify(cred)\n     })\n      .then(res => res.json())\n      .then(\n        (res) => {\n         console.log(res);\n         localStorage.setItem(\"ipfsconfig\", JSON.stringify(res) );\n        },      \n        (err) => {\n         setError(err);\n         setShowErrorAlert(true);\n          console.log(err)\n        }\n      )\n  } \n\n/*\n const handleSubmit = (event) => {\n    event.preventDefault()\n  };\n\n  const captureFile = (event) => {\n    event.stopPropagation()\n    event.preventDefault()\n\n      saveToIpfsWithFilename(event.target.files)\n\n  };\n*/\n\n/*\nconst saveToIpfsWithFilename = async (files) => {\n    const file = [...files][0]\n    const options = {\n    create: true\n    }\n\n      await Storage.set({ key: 'user', value: 'user1' });\n    var source = await ipfs.files.write('/user1/contents/'+file.name, file, options)\n        console.log(source)\n        source = ipfs.files.ls('/user1/contents/'+file.name, options);\n         var file1 = await source.next();\n\t  console.log( file1.value.cid.toString() )\n        \n        setFilehash('/user1/contents/'+ file.name);\n        var x = {\n\t  hash: file1.value.cid.toString(),\n\t  name: file.name,\n\t  cid: file1.value.cid.toString(),\n\t  path: '/user1/contents/'\n        };\n        saveinserver(x);\n  };\n\n*/\n\n  const listfiles = async () => {\n    var options = {};\n var source = ipfs.files.ls('/user1/contents/', options)\n     var arraylength = 0;\n    try {\n      for await (const file of source) {\n        console.log(file)\n        arraylength ++;\n      }\n    } catch (err) {\n         setError(err);\n         setShowErrorAlert(true);\n      console.error(err)\n    }\n        setListvalue(arraylength);\n\n  };\n\n\n  const liststat = async () => {\n    var options = {};\n    var source = await ipfs.files.stat('/user1/contents/', options)\n        console.log(source)\n        setStatvalue(source.cumulativeSize);\n\n  };\n\n/*\n const isJson = (str) => {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n };\n*/\n  \n\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>Admin panel </IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonHeader collapse=\"condense\">\n          <IonToolbar>\n            <IonTitle size=\"large\"> Login, connect  </IonTitle>\n          </IonToolbar>\n        </IonHeader>\n\n    <IonList>\n          <IonItem>\n              <IonLabel position=\"stacked\" color=\"primary\">Username</IonLabel>\n              <IonInput name=\"username\" type=\"text\" value={username} spellCheck={false} autocapitalize=\"off\" onIonChange={e => setUsername(e.detail.value!)}\n                required>\n              </IonInput>\n            </IonItem>\n\n\n        <IonItem>\n              <IonLabel position=\"stacked\" color=\"primary\">Email</IonLabel>\n              <IonInput name=\"email\" type=\"text\" value={email} spellCheck={false} autocapitalize=\"off\" onIonChange={e => setEmail(e.detail.value!)}\n                required>\n              </IonInput>\n            </IonItem>\n       <IonItem>\n              <IonLabel position=\"stacked\" color=\"primary\">Password</IonLabel>\n              <IonInput name=\"password\" type=\"password\" value={password} onIonChange={e => setPassword(e.detail.value!)}>\n              </IonInput>\n            </IonItem>\n   <IonRow>\n            <IonCol>\n              <IonButton expand=\"block\" onClick={mylogin}> Login </IonButton>\n            </IonCol>\n            <IonCol>\n              <IonButton expand=\"block\" onClick={myregister}> Register </IonButton>\n            </IonCol>\n          </IonRow>\n\n\n\n            <IonItem>\n               <IonLabel>\n               {loginmessage}\n               </IonLabel>\n            </IonItem>\n            <IonItem>\n            <IonButton onClick={logintest}> Test Login </IonButton>\n            </IonItem>\n            <IonItem>\n            <IonButton onClick={startnode}> startnode </IonButton>\n            <IonButton onClick={stopnode}> stopnode </IonButton>\n            <IonButton onClick={getconfig}> getconfig </IonButton>\n            </IonItem>\n            <IonItem>\n               <IonLabel>\n               {nodemessage}\n               </IonLabel>\n            </IonItem>\n\n            <IonItem >\n            <IonButton onClick={listfiles}> Number of files </IonButton>\n            <IonLabel slot=\"end\" >  {listvalue} </IonLabel>\n            </IonItem>\n            <IonItem >\n            <IonButton onClick={liststat}> Size usage (bytes) </IonButton>\n            <IonLabel slot=\"end\" >  {statvalue} </IonLabel>\n            </IonItem>\n\n           <IonRadioGroup value={nodetype}   onIonChange={e => setNodetype(e.detail.value!)} >\n        <IonListHeader>\n          <IonLabel>Usage type</IonLabel>\n        </IonListHeader>\n\n        <IonItem>\n          <IonLabel>Private node </IonLabel>\n          <IonRadio slot=\"start\" value=\"privatenode\" />\n        </IonItem>\n\n        <IonItem>\n          <IonLabel>Private shared node </IonLabel>\n          <IonRadio slot=\"start\" value=\"privatesharednode\" />\n        </IonItem>\n\n        <IonItem>\n          <IonLabel>Public shared node</IonLabel>\n          <IonRadio slot=\"start\" value=\"publicsharednode\" />\n        </IonItem>\n\n        <IonItem>\n          <IonLabel>Cluster node</IonLabel>\n          <IonRadio slot=\"start\" value=\"clusternode\" />\n        </IonItem>\n       </IonRadioGroup>\n\n    </IonList>\n    <IonAlert\n          isOpen={showErrorAlert}\n          onDidDismiss={() => setShowErrorAlert(false)}\n          header={'Alert'}\n          subHeader={'Error'}\n          message={error}\n          buttons={['OK']}\n        />\n\n     <IonAlert\n          isOpen={showLoginAlert}\n          onDidDismiss={() => setShowLoginAlert(false)}\n          header={'Instruction'}\n          subHeader={'Login '}\n          message={loginalert}\n          buttons={['OK']}\n        />\n   \n\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Tab3;\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport {\n  IonApp,\n  IonIcon,\n  IonLabel,\n  IonRouterOutlet,\n  IonTabBar,\n  IonTabButton,\n  IonTabs\n} from '@ionic/react';\nimport { IonReactRouter } from '@ionic/react-router';\nimport { square, triangle } from 'ionicons/icons';\nimport Tab1 from './pages/Tab1';\nimport Tab2 from './pages/Tab2';\nimport Tab3 from './pages/Tab3';\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Theme variables */\nimport './theme/variables.css';\n\n/* Global CSS */\nimport './global.css';\n\nconst App: React.FC = () => (\n  <IonApp>\n    <IonReactRouter>\n      <IonTabs>\n        <IonRouterOutlet>\n          <Route path=\"/tab1\" component={Tab1} exact={true} />\n          <Route path=\"/tab2\" component={Tab2} exact={true} />\n          <Route path=\"/tab3\" component={Tab3} />\n          <Route path=\"/\" render={() => <Redirect to=\"/tab2\" />} exact={true} />\n        </IonRouterOutlet>\n        <IonTabBar slot=\"bottom\">\n          <IonTabButton tab=\"tab2\" href=\"/tab2\">\n            <IonIcon icon={triangle} />\n            <IonLabel>File manager</IonLabel>\n          </IonTabButton>\n          <IonTabButton tab=\"tab3\" href=\"/tab3\">\n            <IonIcon icon={square} />\n            <IonLabel>Admin </IonLabel>\n          </IonTabButton>\n        </IonTabBar>\n      </IonTabs>\n    </IonReactRouter>\n  </IonApp>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}